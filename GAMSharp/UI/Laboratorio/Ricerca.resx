<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAJgAA
        AAoAAAAAAAAAADN4tQAzeLUAM3i1ADN4tQAzd7UAMHSy/z+Kwf88hr//PIa+/z2HwP8wdbP/LnCv/y1s
        p8kbQmRdAAAAEjN4tQAzeLUAM3i1ADN4tQAzeLUAMne0AC1xsP9s0PX/Zsrx/2XK8P9myvH/aczx/23P
        8/9Vqtr/Mnez/yRWg3wAAAACM3i1ADN4tQAzeLUAM3i1AAAAAAoudLP/l9z3/8bt+v/F7Pr/vun6/3nL
        7v9iw+v/Zsfv/2K/6/8xd7b/DB4tLDN4tQAzeLUAM3i1ADN4tQAjVIBDOYbA/63Z8P9Uksb/SYi+/2ii
        zv+24fX/W77t/1vB+P9cxv//RJ3e/ypqp7oAAAATAAAAMwAAADMAAAAzJ12QkT2Kw/9emMj/KW2qdSxz
        siMobaydbKTS/1a+9v99raX/zo4A/4mph/8pdL73JViFfjB0sv8vcrD/MXaz/zqDvf9XsN//OoS+/xtC
        ZT4AAAAHHkpxNz2Ewf9VvPr/z40A/8iQAP/SlAD/JnXF/zB2tf9atuP/Xbnl/1245P9ct+P/XLfk/0KP
        x/8rZp2uFjRPTyZcjo08hcP/WbT3/4Oxqf/TjAD/ka6L/ydzwP9TkMH/c8Hn/1e13v9auN3/WbXd/1ex
        3v9Wrd3/QYzF/zqAvP89g7//VqDe/0nDyP8A3pP/SMPM/3zE/v8rcbf/PoC4/37I5f9FhuT/BSfy/0eG
        5P9br9f/WqnY/1qo2f9aptr/W6Tb/16h4f8A24T/ANmL/wDch/+x1Pn/LHGy/ytysP+v3+z/ASfz/wku
        8f8KJfD/Ubrh/wDH//9ZveX/PNjt/wD///881/D/UbrM/wDag/9GyMH/eqbY/y5ysqkudbKqebDR/02K
        5v8AJfL/RYTh/wDM//8AxP//AL7//wD///8A/P//AP///1WW2P+Uv+3/p8js/zV3tv8wdbQLMXa0AC10
        sOR/ttT/wOXv/6LP5f9bweX/AMP//07C7f9Nzef/AP///0fh8/+30ez/oMfm/zJ1tP8vdbNaMne1ADN4
        tQAxdrMALHOx0k2Lv/+Estj/q8vm/7/Y7f++1ez/vtPs/7/T7f+jweL/X5XH/ypwsP8vdbNGMne1ADN4
        tQAzeLUAM3i1ADF2tAAvdbMzLHKxpytwsP8qb6//MnWz/zt8uP8pbq//K3Gw4y5zsm4xdrQAMni1ADN4
        tQAzeLUA//8AAPgDAAD4AQAA+AAAAPAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAB
        AADAAwAA4A8AAA==
</value>
  </data>
</root>